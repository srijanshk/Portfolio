{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["MainBody","props","componentDidMount","window","addEventListener","handleScroll","componentWillUnmount","removeEventListener","e","setState","devInfo","toggleHover","data","newhoverStatus","state","hoverstatus","event","icon","id","backgroundType","Configs","devIntro","devDesc","icons","skillsIcons","className","onScroll","this","map","key","image","style","target","rel","href","url","onMouseEnter","onMouseLeave","role","Component","AboutMe","handleRequest","axios","get","instaLink","instaUsername","instaQuerry","then","response","instaProfilePic","graphql","user","profile_pic_url_hd","catch","error","console","log","finally","heading","aboutDev","src","Education","subHeading","projectsArray","work","Work","education","index","date","iconStyle","background","color","name","title","location","more","Institution","Faculty","Project","gitHubLink","gitHubUsername","gitHubQuerry","project","value","ProjectCard","handleUpdatetime","Date","pushed_at","diff","getTime","hours","Math","trunc","updated_at","toString","day","getDate","monthIndex","getMonth","year","getFullYear","stargazers_count","download_url","svn_url","repo_url","description","languages_url","Language","array","total_count","push","language","Footer","bgStyle","backgroundColor","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.928de288.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Typist from \"react-typist\";\nimport \"./App.css\";\nimport Configs from \"./configurations.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport SchoolIcon from \"@material-ui/icons/School\";\n\nclass MainBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundType: Configs.backgroundType,\n      devInfo: Configs.devIntro,\n      devDesc: Configs.devDesc,\n      hoverstatus: [\"socialicons\", \"socialicons\", \"socialicons\", \"socialicons\"]\n    };\n  }\n  componentDidMount = () => {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  };\n  componentWillUnmount = () => {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  };\n\n  handleScroll = e => {\n    this.setState({ devInfo: \"Srijan Shakya\" });\n  };\n  toggleHover = data => {\n    const newhoverStatus = [...this.state.hoverstatus];\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      this.setState({ hoverstatus: newhoverStatus });\n      if (data.icon.id === 0) {\n      }\n    } else {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      this.setState({ hoverstatus: newhoverStatus });\n      if (data.icon.id === 0) {\n      }\n    }\n  };\n\n  render() {\n    const icons = Configs.icons;\n    const skillsIcons = Configs.skillsIcons;\n    return (\n      <div>\n        <div\n          id=\"divmainbody\"\n          className=\"jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n        >\n          <div className=\" container container-fluid text-center \">\n            <h1 className=\"display-1\" onScroll={this.handleScroll}>\n              {this.state.devInfo}\n            </h1>\n            <Typist className=\"lead\"> {this.state.devDesc}</Typist>\n            <div className=\"p-3\">\n              {skillsIcons.map(icon => (\n                // eslint-disable-next-line no-unused-expressions\n                <span key={icon.id}>\n                  <i className={`fab ${icon.image} fa-3x ${icon.style}`} />\n                </span>\n              ))}\n            </div>\n            <div className=\" p-3\">\n              {icons.map(icon => (\n                <a\n                  key={icon.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`${icon.url}`}\n                >\n                  <i\n                    className={`fab ${icon.image}  fa-3x ${\n                      this.state.hoverstatus[icon.id]\n                    }`}\n                    onMouseEnter={() =>\n                      this.toggleHover({ icon: icon, event: \"enter\" })\n                    }\n                    onMouseLeave={() =>\n                      this.toggleHover({ icon: icon, event: \"leave\" })\n                    }\n                  />\n                </a>\n              ))}\n            </div>\n            <a\n              className=\"btn btn-outline-light btn-lg\"\n              href=\"#divaboutme\"\n              role=\"button\"\n            >\n              More about me\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: \"About me\",\n      aboutDev: Configs.aboutDev,\n      instaProfilePic: \"bad request\"\n    };\n  }\n  componentDidMount = () => {\n    this.handleRequest();\n  };\n\n  handleRequest = e => {\n    axios\n      .get(Configs.instaLink + Configs.instaUsername + Configs.instaQuerry)\n      .then(response => {\n        this.setState({\n          instaProfilePic: response.data.graphql.user.profile_pic_url_hd\n        });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {});\n  };\n\n  render() {\n    return (\n      <div id=\"divaboutme\" className=\"jumbotron jumbotron-fluid m-0\">\n        <div className=\" container container-fluid p-5\">\n          <div className=\"row\">\n            <div className=\" col-5 d-none d-lg-block align-self-center\">\n              <img\n                className=\" border border-secondary rounded-circle\"\n                src={this.state.instaProfilePic}\n              ></img>\n            </div>\n            <div className=\" col-lg-7\">\n              <h1 className=\"display-4 mb-5 text-center\">\n                {this.state.heading}\n              </h1>\n              <p className=\" lead text-center\">{this.state.aboutDev}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: \"Work Experience and Education\",\n      subHeading: \"My previous jobs and qualifications\",\n      projectsArray: []\n    };\n  }\n  render() {\n    const work = Configs.Work;\n    const education = Configs.Education;\n    return (\n      <div\n        id=\"divproject\"\n        className=\"jumbotron jumbotron-fluid bg-transparent m-0\"\n      >\n        <div className=\"text-center\">\n          <h1 className=\"display-4 pb-3\">{this.state.heading}</h1>\n          <p className=\"pb- lead\">{this.state.subHeading}</p>\n        </div>\n        <div className=\"workcontainer\">\n        <VerticalTimeline>\n          {work.map((work, index) => (\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--work\"\n              date={work.date}\n              iconStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\n              icon={<WorkIcon />}\n              key={index}\n            >\n              <h3 className=\"vertical-timeline-element-title\">{work.name}</h3>\n              <h3 className=\"vertical-timeline-element-title\">{work.title}</h3>\n              <h4 className=\"vertical-timeline-element-subtitle\">\n                {work.location}\n              </h4>\n              <p>{work.more}</p>\n            </VerticalTimelineElement>\n          ))}\n          {education.map((education, index) => (\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              date={education.date}\n              iconStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\n              icon={<SchoolIcon />}\n              key={index}\n            >\n              <h3 className=\"vertical-timeline-element-title\">\n                {education.Institution}\n              </h3>\n              <h3 className=\"vertical-timeline-element-title\">\n                {education.Faculty}\n              </h3>\n              <h4 className=\"vertical-timeline-element-subtitle\">\n                {education.location}\n              </h4>\n              <p>{education.more}</p>\n            </VerticalTimelineElement>\n          ))}\n        </VerticalTimeline>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heading: \"Recent Projects\",\n      projectsArray: []\n    };\n  }\n  componentDidMount = () => {\n    this.handleRequest();\n  };\n\n  handleRequest = e => {\n    axios\n      .get(Configs.gitHubLink + Configs.gitHubUsername + Configs.gitHubQuerry)\n      .then(response => {\n        // handle success\n        this.setState({\n          projectsArray: response.data\n        });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  render() {\n    return (\n      <div\n        id=\"divproject\"\n        className=\"jumbotron jumbotron-fluid bg-transparent m-0\"\n      >\n        <div className=\" container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">{this.state.heading}</h1>\n          <div className=\" row\">\n            {this.state.projectsArray.map(project => (\n              <ProjectCard\n                key={project.id}\n                id={project.id}\n                value={project}\n              ></ProjectCard>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ProjectCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      updated_at: \"0 mints\",\n      stargazers_count: this.props.value.stargazers_count,\n      download_url: this.props.value.svn_url + \"/archive/master.zip\",\n      repo_url: this.props.value.svn_url\n    };\n  }\n  componentDidMount = () => {\n    this.handleUpdatetime();\n  };\n\n  handleUpdatetime = () => {\n    const date = new Date(this.state.value.pushed_at);\n    const nowdate = new Date();\n    var diff = nowdate.getTime() - date.getTime();\n    var hours = Math.trunc(diff / 1000 / 60 / 60);\n    if (hours < 24) {\n      this.setState({ updated_at: hours.toString() + \" hours ago\" });\n    } else {\n      var monthNames = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n      var day = date.getDate();\n      var monthIndex = date.getMonth();\n      var year = date.getFullYear();\n      this.setState({\n        updated_at: \"on \" + day + \" \" + monthNames[monthIndex] + \" \" + year\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <div className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n          {/* <img src=\"\" className=\"card-img-top\" alt=\"...\" /> */}\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.state.value.name} </h5>\n            <p className=\"card-text\">{this.state.value.description} </p>\n            <a\n              href={this.state.download_url}\n              className=\" btn btn-outline-secondary mr-3\"\n            >\n              <i className=\"fab fa-github\" /> Clone Project\n            </a>\n            <a\n              href={this.state.repo_url}\n              target=\" _blank\"\n              className=\" btn btn-outline-secondary\"\n            >\n              <i className=\"fab fa-github\" /> Repo\n            </a>\n            <hr />\n            <Language value={this.state.value.languages_url}></Language>\n            <p className=\"card-text\">\n              <a href=\"\" className=\" text-dark card-link mr-4\">\n                <i className=\"fab fa-github\" /> Stars{\" \"}\n                <span className=\"badge badge-dark\">\n                  {this.state.stargazers_count}\n                </span>\n              </a>\n              <small className=\"text-muted\">\n                Updated {this.state.updated_at}\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Language extends Component {\n  state = {\n    data: []\n  };\n  componentDidMount = () => {\n    this.handleRequest();\n  };\n\n  handleRequest = () => {\n    axios\n      .get(this.props.value)\n      .then(response => {\n        // handle success\n        this.setState({ data: response.data });\n      })\n      .catch(function(error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function() {\n        // always executed\n      });\n  };\n\n  render() {\n    const array = [];\n    var total_count = 0;\n    for (var index in this.state.data) {\n      array.push(index);\n      total_count = total_count + this.state.data[index];\n    }\n    return (\n      <div className=\"pb-3\">\n        Languages:{\" \"}\n        {array.map(language => (\n          <a key={language} className=\"badge badge-light card-link\">\n            {language}:{\" \"}\n            {Math.trunc((this.state.data[language] / total_count) * 1000) / 10}{\" \"}\n            %\n          </a>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bgStyle: { backgroundColor: \"#f5f5f5\" }\n    };\n  }\n  render() {\n    return (\n      <footer style={this.state.bgStyle} className=\" mt-auto py-3 text-center\">\n        {/* <strong> &copy; 2019 </strong>*/}\n        <i className=\"fas fa-code\"></i> with <i className=\"fas fa-heart\"></i> by{\" \"}\n        Srijan Shakya using <i className=\"fab fa-react\"></i>\n        <p>\n          <small className=\"text-muted\">\n            {\" \"}\n            Project code is open source. Feel free to fork and make your own\n            version.\n          </small>\n        </p>\n      </footer>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <MainBody></MainBody>\n        <AboutMe></AboutMe>\n        <Education></Education>\n        <Project></Project>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}